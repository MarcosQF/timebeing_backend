services:
  db:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  
  app:
    build: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./timebeing_backend:/app/timebeing_backend
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    command: >
      sh -c "
        poetry run alembic upgrade a7b682f5ede5 &&
        poetry run opentelemetry-instrument uvicorn --host 0.0.0.0 --port 8000 timebeing_backend.main:app 
      "

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  otel:
    image: grafana/otel-lgtm
    ports:
      - "3001:3000"
      - "4317:4317"

  notification-service:
    image: marcosqf/notify-service
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db-notification:5432/notifications
    ports:
      - 8001:8000
    depends_on:
      db-notification:
        condition: service_healthy
    command: >
      sh -c "
        poetry run alembic upgrade head &&
        poetry run uvicorn --host 0.0.0.0 --port 8000 notify_service.main:app 
      "
      
  db-notification:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: notifications
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_notify_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  postgres_notify_data:
  pgadmin_data:
